[{"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\index.js":"1","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\App.js":"2","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\SearchPage.js":"3","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\ListItem.js":"4","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\context\\PokeContext.js":"5","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\DetailsPage.js":"6","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\AdditionalFilters.js":"7"},{"size":285,"mtime":1611252084713,"results":"8","hashOfConfig":"9"},{"size":1073,"mtime":1611368198350,"results":"10","hashOfConfig":"9"},{"size":5361,"mtime":1611368880136,"results":"11","hashOfConfig":"9"},{"size":747,"mtime":1611253204236,"results":"12","hashOfConfig":"9"},{"size":661,"mtime":1611251824903,"results":"13","hashOfConfig":"9"},{"size":8383,"mtime":1611320446070,"results":"14","hashOfConfig":"9"},{"size":4218,"mtime":1611369102689,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2g4td",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\index.js",[],"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\App.js",["33"],"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\SearchPage.js",["34","35","36","37"],"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\ListItem.js",["38"],"import React from 'react'\r\nimport { Typography, Grid } from '@material-ui/core'\r\n\r\n\r\nfunction ListItem(props) {\r\n    const pokemon = props.pokemon\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={4}>\r\n                <img src={pokemon.img} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n                <Typography align=\"left\">#{pokemon.num} {pokemon.name}</Typography>\r\n            </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                <Typography align=\"left\">Type: {pokemon.type.join(\", \")}</Typography>\r\n                <Typography align=\"left\">Weaknesses: {pokemon.weaknesses.join(\", \")}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ListItem;\r\n",["39","40"],"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\context\\PokeContext.js",["41"],"C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\DetailsPage.js",["42","43","44","45"],"import React, { useContext, useState } from 'react'\r\nimport { PokeContext } from '../context/PokeContext'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        background: grey[900],\r\n        color: grey[100],\r\n        padding: 10,\r\n        marginBottom: 20\r\n    },\r\n    container: {\r\n        background: 'black',\r\n        padding: \"50px 150px\"\r\n    },\r\n    detailsBox: {\r\n        background: 'linear-gradient(45deg, #28286b, #204666, #3f195e)',\r\n        padding: 15,\r\n        height: 400\r\n    },\r\n    detailsBg: {\r\n        background: 'black',\r\n        color: grey[100],\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 40\r\n    },\r\n    detailsBg: {\r\n        background: 'black',\r\n        color: grey[100],\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 40,\r\n        marginBottom: 5,\r\n        '& h6':{\r\n            fontSize: 17\r\n        }\r\n    },\r\n    evolutionBgLabel: {\r\n        background: 'black',\r\n        color: grey[100],\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        marginBottom: 5,\r\n        marginTop: 6,\r\n        '& h6':{\r\n            fontSize: 17\r\n        }\r\n    },\r\n    evolutionBg: {\r\n        background: 'black',\r\n        color: grey[100],\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        marginBottom: 5,\r\n        '& h6':{\r\n            fontSize: 17\r\n        }\r\n    },\r\n    imgBg: {\r\n        background: 'linear-gradient(45deg, #00ab86, #009aab, #0072ab)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 40\r\n    },\r\n    prevEvImgBg: {\r\n        background: 'linear-gradient(45deg, #d4950d, #e0e00b, #d9911e)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 5\r\n    },\r\n    nextEvImgBg: {\r\n        background: 'linear-gradient(45deg, #bf0000, #b0355a, #460080)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: 5\r\n    },\r\n    evImg: {\r\n        height: 50\r\n    }\r\n})\r\n\r\nfunction DetailsPage(props) {\r\n    const classes = useStyles()\r\n    const { pokemonList } = useContext(PokeContext)\r\n    const [focusedPokemon, setFocusedPokemon] = useState(props.pokemon)\r\n\r\n\r\n    let evolutionContent\r\n    focusedPokemon.prev_evolution != null || focusedPokemon.next_evolution != null ?\r\n    evolutionContent = <Grid container>\r\n                            <Grid item>\r\n                                <Card className={classes.evolutionBgLabel}>\r\n                                    <Typography align=\"right\" variant=\"sub1\">Evolutions</Typography>\r\n                                </Card>\r\n                            </Grid>\r\n                                {\r\n                                    focusedPokemon.prev_evolution != null ?\r\n                                    focusedPokemon.prev_evolution.map((item) => {\r\n                                            const pokemon = pokemonList.find((pokemon)=> pokemon.num === item.num)\r\n                                            return  <Grid item>\r\n                                                        <Button onClick={() => {setFocusedPokemon(pokemonList.find((focused)=> focused.num === pokemon.num))}}>\r\n                                                            <Card className={classes.evolutionBg}>\r\n                                                                <Grid container>\r\n                                                                <Card className={classes.prevEvImgBg}>\r\n                                                                    <img src={pokemon.img} className={classes.evImg} />\r\n                                                                </Card>\r\n                                                                </Grid>\r\n                                                            </Card>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                        })\r\n                                    :\r\n                                    ''\r\n                                }\r\n                                {\r\n                                    focusedPokemon.next_evolution != null ?\r\n                                    focusedPokemon.next_evolution.map((item) => {\r\n                                            const pokemon = pokemonList.find((pokemon)=> pokemon.num === item.num)\r\n                                            return <Grid item>\r\n                                                        <Button onClick={() => {setFocusedPokemon(pokemonList.find((focused)=> focused.num === pokemon.num))}}>\r\n                                                            <Card className={classes.evolutionBg}>\r\n                                                                <Grid container>\r\n                                                                <Card className={classes.nextEvImgBg}>\r\n                                                                    <img src={pokemon.img} className={classes.evImg} />\r\n                                                                </Card>\r\n                                                                </Grid>\r\n                                                            </Card>\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                        })\r\n                                    :\r\n                                    ''\r\n                                }\r\n                        </Grid> :\r\n    evolutionContent = ''\r\n\r\n  return (\r\n        <Card className={classes.container}>\r\n            <Card className={classes.detailsBox}>\r\n                <Button className={classes.button} onClick={() => props.detailsActive(false)}><ArrowBackIosIcon /> Back</Button>\r\n                <Grid container justify=\"center\" spacing=\"5\">\r\n                    <Grid item sm={12} md={4}>\r\n                        <Card className={classes.detailsBg}>\r\n                            <Card className={classes.imgBg}>\r\n                                <img src={focusedPokemon.img} />\r\n                            </Card>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item sm={12} md={6}>\r\n                        <Card className={classes.detailsBg}>\r\n                            <Grid container justify=\"center\">\r\n                                <Typography variant=\"h5\">{focusedPokemon.name}</Typography>\r\n                                <Typography variant=\"sub1\">#{focusedPokemon.num}</Typography>\r\n                                <Grid container spacing=\"2\">\r\n                                    <Grid item>\r\n                                    <Typography align=\"right\" variant=\"h6\">Type:</Typography>\r\n                                    <Typography align=\"right\" variant=\"h6\">Weaknesses:</Typography>\r\n                                    <Typography align=\"right\" variant=\"h6\">Height:</Typography>\r\n                                    <Typography align=\"right\" variant=\"h6\">Weight:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                    <Typography align=\"left\" variant=\"h6\">{focusedPokemon.type.join(\", \")}</Typography>\r\n                                    <Typography align=\"left\" variant=\"h6\">{focusedPokemon.weaknesses.join(\", \")}</Typography>\r\n                                    <Typography align=\"left\" variant=\"h6\">{focusedPokemon.height}</Typography>\r\n                                    <Typography align=\"left\" variant=\"h6\">{focusedPokemon.weight}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                        {evolutionContent}\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </Card>\r\n  );\r\n}\r\n\r\nexport default DetailsPage\r\n","C:\\Users\\kstam\\workspace\\pokedex\\pokedex\\src\\components\\AdditionalFilters.js",["46"],{"ruleId":"47","severity":1,"message":"48","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"51","line":4,"column":16,"nodeType":"49","messageId":"50","endLine":4,"endColumn":20},{"ruleId":"47","severity":1,"message":"52","line":4,"column":22,"nodeType":"49","messageId":"50","endLine":4,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":97,"column":22,"nodeType":"55","messageId":"56","endLine":97,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":102,"column":31,"nodeType":"55","messageId":"56","endLine":102,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":11,"column":17,"nodeType":"59","endLine":11,"endColumn":42},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":22,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":34,"column":5,"nodeType":"69","messageId":"70","endLine":34,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":114,"column":69,"nodeType":"59","endLine":114,"endColumn":120},{"ruleId":"57","severity":1,"message":"58","line":133,"column":69,"nodeType":"59","endLine":133,"endColumn":120},{"ruleId":"57","severity":1,"message":"58","line":154,"column":33,"nodeType":"59","endLine":154,"endColumn":65},{"ruleId":"47","severity":1,"message":"71","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'cyan' is defined but never used.","'purple' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'detailsBg'.","ObjectExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]